Feel free to add to this list anything that comes to mind that would be
related to modifying the COP source.
If you've implemented a given feature already by experimenting on the CS
source, put a * next to it.
Note: Source for COP released! Will update this with source asap.

Gameplay / Engine changes;
1) Convert to 64-bit (to allow more than 4gb RAM to be used)
2) Multi-thread the engine for up to 4 cores
3) Solve stuttering problem (likely due to LuaJit. Solution would be to
   upgrade it to newest version and then rewrite all the lua files to conform
   with it).
4) Solve problem with COP sometimes not loading correctly upon launch on some
   systems as well as not always exiting properly and still running as a
   background task.
5) Get BugTrap to spit out better error logs
6) Solve problem with stealth mechanics
7) Fix shadow bug in DX10 where a big world shadow appears and disappears
   depending on what angle you are in relation to the sun
8) Eliminate usage of precompiled shaders so they can all be modified at will
   like in SOC
9) When DX12 comes out, add DX12 renderer (doesn't sound like it has much new
   graphics-wise, but it is crazy faster than DX11)
10) Allow more than 2 ammo types per weapon without screwed up/missing UI ammo
    count
11) Allow environment mapping for weapons not on DX8 (I found the file
    responsible, just need someone to implement it) (NOTE: K.D. Says this can't really
    be done without it happening indoors too :(  )
12) Allow .seq files to be given a stop frame/point (animated blood puddles
    underneath bodies anyone?)
13) Allow wallmarks to have bump and bump# usage (for glossy blood and for
    bullet-holes that do things like take small chunks out of cement)
14) Better tessellation in DX11/12. Modify current method plus implement
    artist controlled displacement mapping or something else that allows more
	control over usage
15) 3D shell casings (I know this can sorta be done in only LUA, but it would
    be simpler just to hardcode it)
16) Replace current shadowing system with one with better antialiasing and
    less "noise" when a character is in an interior and moving around
17) Actor shadows in R2/R3 - *
18) Grass draw distance console command - *
19) Re-enable fov and hud_fov console commands - *
20) Re-enable grass shadows - *
21) Add Instanced Tessellation for DX9&10:
    http://developer.download.nvidia.com/SDK/10.5/Samples/InstancedTessellation.zip
    
    -- Newly added by LoNer1
    -- Proposing some heavy rendering changes / additions
    -- https://github.com/NVIDIAGameWorks/D3DSamples
    -- https://developer.nvidia.com/gameworks-directx-samples
    -- https://developer.nvidia.com/sites/default/files/akamai/BAVOIL_ParticleShadowsAndCacheEfficientPost.pdf
    -- http://docs.nvidia.com/gameworks/index.html#gameworks_landing_page.htm%3FTocPath%3D_____1
22) Add proper GI algorythms -that actually work- such as radiosity. 
23) Add / Replace current SSAO/HDAO
24) Particle Shadows / Overhauled particles system (solid?) - actually an SDK proposal like 25
25) Adding (configurable) 'wind' in the game - note: Preferably with the SDK and a 'pathfinding' / node system like in CE / FB3
26) Make vegitation rigid / enable collision with vegetation. 
27) Stereo sounds anyone?
28) (detailed ideas about this will probably surface later) more gore / realistic(?)* gore.
    -- * Wouldn't know if that's the right choice of words, but I'm not for this kind of gore;
    -- http://www.ask-resimleri.com/wp-content/uploads/Soldier-of-Fortune-Payback-1.jpeg

SDK improvements;
1) Get SDK compiled with Visual Studio (=> get rid of Borland trash)
2) Less errors and crashes, loads of these.
3) Visible level-loaded decals and the ability to see decals that aren't just
   'wallmarkblend' type.
4) 'Undo' function that doesn't take minutes to do and actually works
   properly.
5) Better performance
6) "Render" / "ingame" like editor. Not WYSIWYG, but for example, having proper
   lighting settings which are configurable from a weather editor in-editor.

Weapon related changes;
1) Add ability to give weapons like the Abakan the ability to specify a fire
   mode where they fire at a different RPM (Abakan fires 2 shots at 1800rpm.
   The new AK-12 fires 3 shots at 1,000rpm. I'm not adding an AK-12,
   just giving an example).
2) Make pistols more useful somehow. Maybe make a "quick pistol" key or
   something.
3) Different reload sounds for reloading empty vs reloading full - *
4) Add anm_reload_empty to weapons that don't have one - *
5) Animation for misfires - *
6) Weapons can't be reloaded during sprint
7) sprint_start and sprint_stop animations for weapons
8) Smoother transition/falloff for weapons using grenade launcher attachments
9) Full-auto pistol class so they display proper empty animations - *
10) Bayonet and underslung shotgun attachments
11) Ability to swap out different scope models and eotech's/kobra's without
    having to swap models like in Shoker
12) Ability to change weapon model visual based on upgrades
13) 3D scopes (different than in Shoker and STCOP; I mean a scope model that
    takes up the screen with a texture underlay of the crosshair)
14) Allow new types of weapon upgrades like artifact augmentation
15) Ironsight zoom in/out sounds - *
16) Add a quick-grenade slot (can also be done currently, but imho also wiser to hardcode)
17) Animations for attaching weapon attachements (opinions on this may differ, but it's nice to have?)
18) While-zoomed-in reloads (like far cry). Not only for sidearms, also sniper rifles and shotguns. No AR's.
