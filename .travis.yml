# Based on https://github.com/ldionne/hana/blob/master/.travis.yml
dist: xenial
sudo: required
cache: ccache
language: cpp

#branches:
#  only:
#  - linux
#  - xd_dev
#  - "/^v\\d+\\./"

os:
- linux

matrix:
  include:
    - env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
      addons: &gcc8
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-8

    - env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x86 BUILD_CONFIGURATION=Release
      addons: *gcc8

    - env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x64 BUILD_CONFIGURATION=Debug
      addons: *gcc8

    - env: C_COMPILER=gcc-8 CXX_COMPILER=g++-8 TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
      addons: *gcc8

#    - env: C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
#      addons: &clang50
#        apt:
#          sources:
#            - llvm-toolchain-trusty-5.0
#          packages:
#            - clang-5.0

#    - env: C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 TARGET_CPU=x84 BUILD_CONFIGURATION=Release
#      addons: *clang50

#    - env: C_COMPILER=clang-6.0 CXX_COMPILER=clang++-6.0 TARGET_CPU=x64 BUILD_CONFIGURATION=Release
#      addons: &clang60
#        apt:
#          sources:
#            - llvm-toolchain-trusty-6.0
#          packages:
#            - clang-6.0

#    - env: C_COMPILER=clang-6.0 CXX_COMPILER=clang++-6.0 TARGET_CPU=x84 BUILD_CONFIGURATION=Release
#      addons: *clang60
before_install:
 - sudo add-apt-repository ppa:ubuntu-lxc/daily -y
 - wget -q -O - https://files.viva64.com/etc/pubkey.txt | sudo apt-key add -
 - sudo wget -O /etc/apt/sources.list.d/viva64.list
          https://files.viva64.com/etc/viva64.list
 - sudo apt-get update -qq
 - sudo apt-get install -qq coccinelle parallel 
         libapparmor-dev libcap-dev libseccomp-dev
         python3-dev python3-setuptools docbook2x 
         libgnutls-dev libselinux1-dev linux-libc-dev pvs-studio
         libio-socket-ssl-perl libnet-ssleay-perl sendemail 
         ca-certificates

install:
  - export CC=${C_COMPILER}
  - export CXX=${CXX_COMPILER}
  - ${CXX} --version

before_script:
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - mkdir bin
  - cd bin
  - if [ $TARGET_CPU == x64 ]; then
       sudo apt-get install -y libglew-dev libegl1-mesa-dev libgles2-mesa-dev libpugixml-dev libopenal-dev libtbb-dev libcrypto++-dev liblockfile-dev libfreeimage-dev libfreeimageplus-dev;
       sudo apt-get install -y cmake liblua5.1-0-dev libssl-dev libogg-dev libtheora-dev libvorbis-dev liblzo2-dev libjpeg-dev libncurses5-dev;
       wget http://launchpadlibrarian.net/297657749/libsdl2-2.0-0_2.0.5+dfsg1-1ubuntu1_amd64.deb;
       wget http://launchpadlibrarian.net/297657747/libsdl2-dev_2.0.5+dfsg1-1ubuntu1_amd64.deb;
       sudo dpkg -i *.deb;
       sudo apt-get -f -y install;
       cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION;
    fi

  - if [ $TARGET_CPU == x86 ]; then
       sudo dpkg --add-architecture i386 && sudo apt-get -qq update && sudo apt-get install -y gcc-multilib g++-7-multilib libpulse-dev:i386 libglib2.0-dev:i386;
       sudo apt-get install -y libglew-dev:i386 libegl1-mesa-dev:i386 libgles2-mesa-dev:i386 libpugixml-dev:i386 libopenal-dev:i386 libtbb-dev:i386 libcrypto++-dev:i386 liblockfile-dev:i386 libfreeimage-dev:i386 libfreeimageplus-dev:i386;
       sudo apt-get install -y cmake liblua5.1-0-dev:i386 libssl-dev:i386 libogg-dev:i386 libtheora-dev:i386 libvorbis-dev:i386 liblzo2-dev:i386 libjpeg-dev:i386 libncurses5-dev:i386;
       wget http://launchpadlibrarian.net/297657459/libsdl2-2.0-0_2.0.5+dfsg1-1ubuntu1_i386.deb;
       wget http://launchpadlibrarian.net/297657456/libsdl2-dev_2.0.5+dfsg1-1ubuntu1_i386.deb;
       sudo dpkg -i *.deb;
       sudo apt-get -f -y install;
       CFLAGS="-m32" CXXFLAGS="-m32" cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DCMAKE_ASM_FLAGS=-m32;
    fi

script:
- if [ $TRAVIS_OS_NAME == linux ]; then make -j $core_count && file src/xrCore/xrCore.so; fi

 - ./coccinelle/run-coccinelle.sh -i
 - git diff --exit-code
 - export CFLAGS="-Wall -Werror"
 - export LDFLAGS="-pthread -lpthread"
 - ./autogen.sh
 - rm -Rf build
 - mkdir build
 - cd build
 - ../configure --enable-tests --with-distro=unknown
 - pvs-studio-analyzer credentials $PVS_USERNAME $PVS_KEY -o PVS-Studio.lic
 - pvs-studio-analyzer trace -- make -j4
 - pvs-studio-analyzer analyze -j2 -l PVS-Studio.lic
     -o PVS-Studio-${CC}.log
     --disableLicenseExpirationCheck
 - plog-converter -t html PVS-Studio-${CC}.log -o PVS-Studio-${CC}.html

 - sendemail -t mail@domain.com
             -u "PVS-Studio $CC report, commit:$TRAVIS_COMMIT"
             -m "PVS-Studio $CC report, commit:$TRAVIS_COMMIT"
             -s smtp.gmail.com:587
             -xu $MAIL_USER
             -xp $MAIL_PASSWORD
             -o tls=yes
             -f $MAIL_USER
             -a PVS-Studio-${CC}.log PVS-Studio-${CC}.html

notifications:
  email: false
