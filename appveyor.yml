version: '{build}'
pull_requests:
  do_not_increment_build_number: true
skip_tags: true
image: Visual Studio 2017
environment:
  matrix:
  - tbs_arch: x86
    tbs_tools: mingw
  - tbs_arch: x64
    tbs_tools: mingw
  - tbs_arch: x86
    tbs_tools: msvc
    tbs_config: Debug
  - tbs_arch: x86
    tbs_tools: msvc
    tbs_config: Release
  - tbs_arch: x64
    tbs_tools: msvc
    tbs_config: Debug
  - tbs_arch: x64
    tbs_tools: msvc
    tbs_config: Release
build_script:
- C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin\mingw32-make --version
- C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin\g++ --version
#- ECHO %PATH%
- git submodule update --init --recursive

# Add mingw-w64 to PATH
# Remove sh.exe from the path otherwise CMake will complain:
# "sh.exe was found in your PATH, here: C:/Program Files/Git/usr/bin/sh.exe"
# and the MinGW build will not work (the Visual Studio build does not care).

- if [%tbs_tools%]==[mingw] (
    SET "PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%" &&
    SET "PATH=%PATH:C:\Program Files\Git\usr\bin=%"
  )
- ECHO %PATH%
- if [%tbs_tools%]==[mingw] (
    MKDIR bin &&
    CD bin &&
     CC=gcc CXX=g++ cmake .. -DCMAKE_MAKE_PROGRAM=mingw32-make -G "MinGW Makefiles" &&
    mingw32-make
  )
- if [%tbs_tools%]==[msvcDISABLE] (
    ECHO '%cd%' &&
    ECHO '*** Building %tbs_tools%\%tbs_arch%\%tbs_config%' &&
    msbuild "src\engine.sln" /m /verbosity:minimal /property:PlatformToolset=v141 /t:Clean,Build /p:Platform=%tbs_arch% /p:Configuration=%tbs_config% /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  )
test: off
artifacts:
- path: res/xdOpenXRay.Dx86.7z
  name: xdOpenXRay.Dx86.7z
- path: res/xdOpenXRay.Dx64.7z
  name: xdOpenXRay.Dx64.7z
- path: res/xdOpenXRay.Rx86.7z
  name: xdOpenXRay.Rx86.7z
- path: res/xdOpenXRay.Rx64.7z
  name: xdOpenXRay.Rx64.7z
